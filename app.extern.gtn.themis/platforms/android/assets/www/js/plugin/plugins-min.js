var plugins={config:null,pluginNames:[],constructor:function(){plugins.loadPluginConfig();if(!plugins.verifyPluginNames()){alert("Fatal error: plugins.verifyPluginNames()")}else{if(!plugins.loadPlugins()){alert("Fatal error: plugins.loadPlugins()")}}plugins.callPluginsLoadedEvent();plugins.callPluginEvents()},loadPluginConfig:function(){var b=null;var a="../js/plugin/plugins.json";$.ajax({url:a,async:false,dataType:"json",success:function(c){plugins.config=c;b=true},error:function(c,e,d){alert("Fatal error in javascriptLoader.js: Can't load the plugins. Url: "+a+" Error: "+e);b=false}});return b},verifyPluginNames:function(){return true},loadPlugins:function(){var a=true;$.each(plugins.config,function(d,e){if(e==true){var c="";if(app.config.min){c="-min"}var b="../js/plugin/plugin."+d+c+".js";$.ajax({url:b,async:false,dataType:"script",success:function(f){if(window["plugin_"+d]==undefined){alert("Fatal error: Plugin class is not defined: plugin_"+d);a=false;return}try{window["plugin_"+d].config=JsonLoader("../js/plugin/plugin."+d+".json");if(window["plugin_"+d].config.name==undefined){alert("Fatal error: The property 'name' is not defined in JSON file: ../js/plugin."+d+".json");return false}if(window["plugin_"+d].config.shortname==undefined){alert("Fatal error: The property 'shortname' is not defined in JSON file: ../js/plugin."+d+".json");return false}}catch(g){alert("Fatal error: The plugin has no 'config' property: "+d);a=false;return}try{window["plugin_"+d].constructor()}catch(g){alert("Fatal error: The plugin has no constructor(): "+d);a=false;return}try{app.addObject(window["plugin_"+d].config.name,window["plugin_"+d].functions);app.addObject(window["plugin_"+d].config.shortname,window["plugin_"+d].functions)}catch(g){alert("Fatal error: The plugin has no functions{}: "+d);a=false;return}plugins.pluginNames.push(d)},error:function(f,h,g){alert("Fatal Error: Can't load plugin: "+b)}})}if(!a){return false}});return a},callPluginsLoadedEvent:function(){$.each(plugins.pluginNames,function(a,c){try{window["plugin_"+c].pluginsLoaded()}catch(b){alert("Notify: The plugin has no pluginsLoaded() event handler: plugin_"+c)}})},callPluginEvents:function(){$.each(plugins.pluginNames,function(a,c){try{window["plugin_"+c].definePluginEvents()}catch(b){app.debug.alert("Notify: The plugin has no definePluginEvents() method: plugin_"+c,10)}})}};plugins.constructor();
